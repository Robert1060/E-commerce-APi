openapi: 3.0.0
info:
  title: E-commerce-API
  contact: {}
  version: "1.0"
servers:
  - url: https://e-commerce-api-v1-10.herokuapp.com/api/v2
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
            example:
              name: bob
              email: bob@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserRequest"
            example:
              email: john@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/logout:
    get:
      tags:
        - Auth
      summary: Logout User
      operationId: LogoutUser
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /users:
    get:
      tags:
        - User
      summary: Get All Users
      operationId: GetAllUsers
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /products/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The product ID
    get:
      tags:
        - User
      summary: Get Single User
      operationId: GetSingleUser
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /users/showMe:
    get:
      tags:
        - User
      summary: Show Current User
      operationId: ShowCurrentUser
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /users/updateUser:
    patch:
      tags:
        - User
      summary: Update User
      operationId: UpdateUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
            example:
              name: robert
              email: robert@gmail.com
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /users/updateUserPassword:
    patch:
      tags:
        - User
      summary: Update User Password
      operationId: UpdateUserPassword
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserPasswordRequest"
            example:
              oldPassword: hujnia
              newPassword: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /products:
    post:
      tags:
        - Product
      summary: Create Product
      operationId: CreateProduct
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductRequest"
            example:
              name: "product number 2 "
              price: 5900
              colors:
                - "#0000ff"
                - "#000"
              company: ikea
              description: Cloud bread VHS hell of banjo bicycle rights jianbing umami mumblecore etsy 8-bit pok pok +1 wolf. Vexillologist yr dreamcatcher waistcoat, authentic chillwave trust fund. Viral typewriter fingerstache pinterest pork belly narwhal. Schlitz venmo everyday carry kitsch pitchfork chillwave iPhone taiyaki trust fund hashtag kinfolk microdosing gochujang live-edge
              category: bedroom
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    get:
      tags:
        - Product
      summary: Get All Products
      operationId: GetAllProducts
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /product/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The product ID
    patch:
      tags:
        - Product
      summary: Update Product
      operationId: UpdateProduct
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductRequest"
            example:
              name: krzeslo
              price: 23999
              image: https://dl.airtable.com/.attachmentThumbnails/0446e84c5bca9643de3452a61b2d6195/1b32f48b
              colors:
                - "#0000ff"
                - "#000"
              company: ikea
              description: Cloud bread VHS hell of banjo bicycle rights jianbing umami mumblecore etsy 8-bit pok pok +1 wolf. Vexillologist yr dreamcatcher waistcoat, authentic chillwave trust fund. Viral typewriter fingerstache pinterest pork belly narwhal. Schlitz venmo everyday carry kitsch pitchfork chillwave iPhone taiyaki trust fund hashtag kinfolk microdosing gochujang live-edge
              category: bedroom
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    get:
      tags:
        - Product
      summary: Get Single Product
      operationId: GetSingleProduct
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    delete:
      tags:
        - Product
      summary: Delete Product
      operationId: DeleteProduct
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /products/uploadImage:
    post:
      tags:
        - Product
      summary: Upload Image
      operationId: UploadImage
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
        required: false
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    get:
      tags:
        - Product
      summary: Get Single Product Reviews
      operationId: GetSingleProductReviews
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /reviews:
    get:
      tags:
        - Review
      summary: Get All Reviews
      operationId: GetAllReviews
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    post:
      tags:
        - Review
      summary: Create Review
      operationId: CreateReview
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReviewRequest"
            example:
              product: 61f05d1fbd8e01b33839a205
              rating: 4
              title: great product
              comment: very bad product by robert:(
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /reviews/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The review ID
    get:
      tags:
        - Review
      summary: Get Single Review
      operationId: GetSingleReview
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    patch:
      tags:
        - Review
      summary: Update Review
      operationId: UpdateReview
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateReviewRequest"
            example:
              title: bad product
              rating: 1
              comment: "susan done that "
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    delete:
      tags:
        - Review
      summary: Delete Review
      operationId: DeleteReview
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /orders:
    post:
      tags:
        - Order
      summary: Create Order
      operationId: CreateOrder
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderRequest"
            example:
              tax: 399
              shippingFee: 499
              items:
                - name: bed
                  price: 2699
                  image: https://dl.airtable.com/.attachmentThumbnails/e8bc3791196535af65f40e36993b9e1f/438bd160
                  amount: 3
                  product: 61eece2c22c990a4e207112e
                - name: chair
                  price: 2999
                  image: https://dl.airtable.com/.attachmentThumbnails/e8bc3791196535af65f40e36993b9e1f/438bd160
                  amount: 2
                  product: 61f05d1fbd8e01b33839a205
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    get:
      tags:
        - Order
      summary: Get All Orders
      operationId: GetAllOrders
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /orders/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The order ID
    get:
      tags:
        - Order
      summary: Get Single Order
      operationId: GetSingleOrder
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    patch:
      tags:
        - Order
      summary: Update Order
      operationId: UpdateOrder
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrderRequest"
            example:
              paymentIntentId: randomId
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /orders/showAllMyOrders:
    get:
      tags:
        - Order
      summary: Get Current User Orders
      operationId: GetCurrentUserOrders
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: bob
        email: bob@gmail.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: john@gmail.com
        password: secret
    UpdateUserRequest:
      title: UpdateUserRequest
      required:
        - name
        - email
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      example:
        name: robert
        email: robert@gmail.com
    UpdateUserPasswordRequest:
      title: UpdateUserPasswordRequest
      required:
        - oldPassword
        - newPassword
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      example:
        oldPassword: hujnia
        newPassword: secret
    CreateProductRequest:
      title: CreateProductRequest
      required:
        - name
        - price
        - colors
        - company
        - description
        - category
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
          format: int32
        colors:
          type: array
          items:
            type: string
          description: ""
        company:
          type: string
        description:
          type: string
        category:
          type: string
      example:
        name: "product number 2 "
        price: 5900
        colors:
          - "#0000ff"
          - "#000"
        company: ikea
        description: Cloud bread VHS hell of banjo bicycle rights jianbing umami mumblecore etsy 8-bit pok pok +1 wolf. Vexillologist yr dreamcatcher waistcoat, authentic chillwave trust fund. Viral typewriter fingerstache pinterest pork belly narwhal. Schlitz venmo everyday carry kitsch pitchfork chillwave iPhone taiyaki trust fund hashtag kinfolk microdosing gochujang live-edge
        category: bedroom
    UpdateProductRequest:
      title: UpdateProductRequest
      required:
        - name
        - price
        - image
        - colors
        - company
        - description
        - category
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
          format: int32
        image:
          type: string
        colors:
          type: array
          items:
            type: string
          description: ""
        company:
          type: string
        description:
          type: string
        category:
          type: string
      example:
        name: krzeslo
        price: 23999
        image: https://dl.airtable.com/.attachmentThumbnails/0446e84c5bca9643de3452a61b2d6195/1b32f48b
        colors:
          - "#0000ff"
          - "#000"
        company: ikea
        description: Cloud bread VHS hell of banjo bicycle rights jianbing umami mumblecore etsy 8-bit pok pok +1 wolf. Vexillologist yr dreamcatcher waistcoat, authentic chillwave trust fund. Viral typewriter fingerstache pinterest pork belly narwhal. Schlitz venmo everyday carry kitsch pitchfork chillwave iPhone taiyaki trust fund hashtag kinfolk microdosing gochujang live-edge
        category: bedroom
    CreateReviewRequest:
      title: CreateReviewRequest
      required:
        - product
        - rating
        - title
        - comment
      type: object
      properties:
        product:
          type: string
        rating:
          type: integer
          format: int32
        title:
          type: string
        comment:
          type: string
      example:
        product: 61f05d1fbd8e01b33839a205
        rating: 4
        title: great product
        comment: very bad product by robert:(
    UpdateReviewRequest:
      title: UpdateReviewRequest
      required:
        - title
        - rating
        - comment
      type: object
      properties:
        title:
          type: string
        rating:
          type: integer
          format: int32
        comment:
          type: string
      example:
        title: bad product
        rating: 1
        comment: "susan done that "
    CreateOrderRequest:
      title: CreateOrderRequest
      required:
        - tax
        - shippingFee
        - items
      type: object
      properties:
        tax:
          type: integer
          format: int32
        shippingFee:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
          description: ""
      example:
        tax: 399
        shippingFee: 499
        items:
          - name: bed
            price: 2699
            image: https://dl.airtable.com/.attachmentThumbnails/e8bc3791196535af65f40e36993b9e1f/438bd160
            amount: 3
            product: 61eece2c22c990a4e207112e
          - name: chair
            price: 2999
            image: https://dl.airtable.com/.attachmentThumbnails/e8bc3791196535af65f40e36993b9e1f/438bd160
            amount: 2
            product: 61f05d1fbd8e01b33839a205
    Item:
      title: Item
      required:
        - name
        - price
        - image
        - amount
        - product
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
          format: int32
        image:
          type: string
        amount:
          type: integer
          format: int32
        product:
          type: string
      example:
        name: bed
        price: 2699
        image: https://dl.airtable.com/.attachmentThumbnails/e8bc3791196535af65f40e36993b9e1f/438bd160
        amount: 3
        product: 61eece2c22c990a4e207112e
    UpdateOrderRequest:
      title: UpdateOrderRequest
      required:
        - paymentIntentId
      type: object
      properties:
        paymentIntentId:
          type: string
      example:
        paymentIntentId: randomId
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: Auth
  - name: User
  - name: Product
  - name: Review
  - name: Order
